FUNCTION

DELIMITER $$
CREATE DEFINER=`root`@`localhost` FUNCTION `giatri_hang`(`Ma_sp` VARCHAR(10)) RETURNS int(11)
begin
     declare tong int default 0;
     select sum( So_Luong* DonGia ) into tong
    from ChiTietHoaDonXuat
    where Ma_SP = Ma_sp
    group by Ma_SP;

    return tong;
end$$
DELIMITER ;


PROCEDURES

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Delete_SP`(IN `input` VARCHAR(11))
BEGIN
SET FOREIGN_key_checks =0;
DELETE FROM San_Pham WHERE Ma_SP=input;
SET FOREIGN_key_checks =1;
SELECT*FROM San_Pham;
END$$
DELIMITER ;
-------------------------------------------------------
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `TongSoLuong_SP`(IN `SP` VARCHAR(10))
BEGIN
SELECT San_Pham.Ten_SP, SUM(San_Pham.So_Luong) as TongSP
FROM san_pham
WHERE SP = San_pham.Ten_SP
GROUP BY San_Pham.Ten_SP;
SELECT * FROM San_Pham;
END$$
DELIMITER ;
-----------------------------------------
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_SP`(IN `Ma_SP` VARCHAR(10), IN `Ma_NCC` VARCHAR(10), IN `Ten_SP` VARCHAR(50), IN `Mau_Sac` VARCHAR(10), IN `Ma_Chatlieu` VARCHAR(10), IN `So_Luong` SMALLINT(6), IN `DonGiaNhap` FLOAT, IN `DonGiaBan` FLOAT, IN `Ghi_Chu` VARCHAR(200))
BEGIN
SET FOREIGN_key_checks =0;
INSERT INTO San_Pham (Ma_SP, Ma_NCC, Ten_SP, Mau_Sac,
Ma_Chatlieu, So_Luong, DonGiaNhap, DonGiaBan, Ghi_Chu)
VALUES(Ma_SP, Ma_NCC, Ten_SP, Mau_Sac, Ma_Chatlieu,
So_Luong, DonGiaNhap, DonGiaBan, Ghi_Chu);
SET FOREIGN_key_checks =1;
END$$
DELIMITER ;
------------------------------------------------------


TRIGGER
Bảng chất liệu:
CREATE TRIGGER `insert_ChatLieu` BEFORE INSERT ON `chat_lieu`
 FOR EACH ROW BEGIN
	IF (new.Ma_ChatLieu IN (SELECT Ma_ChatLieu FROM Chat_Lieu)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'maCL does not exist';
    END IF;
END
-----------------------------------
Bảng chi tiết hóa đơn nhập:
CREATE TRIGGER `insert_CTHDN` BEFORE INSERT ON `chitiethoadonnhap`
 FOR EACH ROW BEGIN
	IF (new.Ma_HDN IN (SELECT Ma_HDN FROM HoaDonNhap)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'maCV does not exist';
    END IF;
END
------------------------------------------
Bảng Chi tiết hóa đơn xuất:
CREATE TRIGGER `insert_CTHoaDonXuat` BEFORE INSERT ON `chitiethoadonxuat`
 FOR EACH ROW BEGIN
	IF (new.Ma_HDX IN (SELECT Ma_HDX FROM HoaDonXuat)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'maCV does not exist';
    END IF;
END
------------------------------------------
Bảng Hóa đơn nhập
CREATE TRIGGER `before_insert_HoaDonNhap` BEFORE INSERT ON `hoadonnhap`
 FOR EACH ROW BEGIN
	IF (new.Ma_SP NOT IN (SELECT Ma_SP FROM HoaDonNhap)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Ma_SP does not exist';
    END IF;
END

---------------------------------------
Bảng Hóa Đơn xuất
Câu a:
CREATE TRIGGER `Update_KhachHang` BEFORE UPDATE ON `hoadonxuat`
 FOR EACH ROW BEGIN
	UPDATE Khach_Hang
    SET Ma_HDX = new.Ma_HDX
    WHERE Ma_HDX = old.Ma_HDX;
END
Câu b:
CREATE TRIGGER `delete_KhachHang` BEFORE DELETE ON `hoadonxuat`
 FOR EACH ROW BEGIN
	IF (old.Ma_KH IN (SELECT Ma_KH FROM Khach_Hang)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Ma_KH does not exist';
    END IF;
END

---------------------------------------
Bảng Khách hàng
CREATE TRIGGER `insert_KH` BEFORE INSERT ON `khach_hang`
 FOR EACH ROW BEGIN
	IF (new.Ma_KH IN (SELECT Ma_KH FROM Khach_Hang)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Ma_KH does not exist';
    END IF;
END

---------------------------------------
Bảng Nhà cung cấp
CREATE TRIGGER `insert_NCC` BEFORE INSERT ON `nhacungcap`
 FOR EACH ROW BEGIN
	IF (new.Ma_NCC IN (SELECT Ma_NCC FROM NhaCungCap)) THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'maCV does not exist';
    END IF;
END

---------------------------------------
Bảng Nhân viên
CREATE TRIGGER `After_update_nhanvien` BEFORE UPDATE ON `nhan_vien`
 FOR EACH ROW BEGIN
	UPDATE HoaDonNhap
    SET Ma_NV = new.Ma_NV
    WHERE Ma_NV = old.Ma_NV;
END

---------------------------------------
Bảng Sản phẩm
CREATE TRIGGER `after_delete_Product` BEFORE DELETE ON `san_pham`
 FOR EACH ROW BEGIN
	DELETE FROM HoaDonNhap
    WHERE Ma_SP = old.Ma_SP;
END


